[tool.isort]
# config compatible with Black
line_length = 120
multi_line_output = 3
default_section = "THIRDPARTY"
honor_noqa = true
include_trailing_comma = true
known_third_party = ["_pytest", "allure", "allure_commons", "dotenv", "lovely", "playwright", "pluggy", "pytest", "pytest_asyncio"]
atomic = true

[tool.black]
line-length = 88
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.pylint.master]
# jobs=0 means 'use all CPUs'
jobs = 0

[tool.pylint.message_control]
max-line-length = 20
disable = [
    "abstract-method",
    "bad-continuation",
    "bare-except",
    "broad-except",
    "duplicate-code",
    "fixme",
    "invalid-name",
    "line-too-long",
    "locally-disabled",
    "logging-fstring-interpolation",
    "missing-docstring",
    "no-member",
    "no-name-in-module",
    "no-self-use",
    "no-value-for-parameter",
    "protected-access",
    "raise-missing-from",
    "redefined-outer-name",
    "relative-import",
    "too-few-public-methods",
    "ungrouped-imports",
    "unused-argument",
    "wrong-import-position",
]

[tool.pylint.reports]
output-format = "colorized"

[tool.pylint.format]
logging-modules = [
    "logging",
]


[tool.pytest.ini_options]
markers = [
    "registration: Registration test",
]
python_files = [
    "tests_*.py"
]

[tool.mypy]
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
namespace_packages = true
no_strict_optional = false
warn_return_any = false
warn_unused_configs = true
check_untyped_defs = true
follow_imports = "silent"
incremental = true
plugins = ["sqlalchemy.ext.mypy.plugin"]

[[tool.mypy.overrides]]
module = [
    "allure",
    "hvac",
    "requests"
]
ignore_missing_imports = true
